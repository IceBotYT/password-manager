<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    /* The Close Button */
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
  body {
    padding: 25px;
    background-color: white;
    color: black;
    font-size: 25px;
}


/* The snackbar - position it at the bottom and in the middle of the screen */
#snackbar {
    visibility: hidden; /* Hidden by default. Visible on click */
    min-width: 250px; /* Set a default minimum width */
    margin-left: -125px; /* Divide value of min-width by 2 */
    background-color: #333; /* Black background color */
    color: #fff; /* White text color */
    text-align: center; /* Centered text */
    border-radius: 2px; /* Rounded borders */
    padding: 16px; /* Padding */
    position: fixed; /* Sit on top of the screen */
    z-index: 1; /* Add a z-index if needed */
    left: 50%; /* Center the snackbar */
    bottom: 30px; /* 30px from the bottom */
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
#snackbar.show {
    visibility: visible; /* Show the snackbar */
    /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
          However, delay the fade out process for 2.5 seconds */
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
    from {
        bottom: 0;
        opacity: 0;
    }
    to {
        bottom: 30px;
        opacity: 1;
    }
}

@keyframes fadein {
    from {
        bottom: 0;
        opacity: 0;
    }
    to {
        bottom: 30px;
        opacity: 1;
    }
}

@-webkit-keyframes fadeout {
    from {
        bottom: 30px;
        opacity: 1;
    }
    to {
        bottom: 0;
        opacity: 0;
    }
}

@keyframes fadeout {
    from {
        bottom: 30px;
        opacity: 1;
    }
    to {
        bottom: 0;
        opacity: 0;
    }
}

/* Popup container */
.popup {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

/* The actual popup (appears on top) */
.popup .popuptext {
    visibility: hidden;
    width: 160px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 8px 0;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -80px;
}

/* Popup arrow */
.popup .popuptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
}

/* Toggle this class when clicking on the popup container (hide and show the popup) */
.popup .show {
    visibility: visible;
    -webkit-animation: fadeIn 0.3s;
    animation: fadeIn 0.3s
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.veil {
        display: block; /* Shown when loading */
          position: fixed; /* Stay in place */
          z-index: 1; /* Sit on top */
          left: 0;
          top: 0;
          width: 100%; /* Full width */
          height: 100%; /* Full height */
          overflow: auto; /* Enable scroll if needed */
          background-color: rgb(70,55,55); /* Fallback color */
          background-color: rgba(70, 55, 55, 0.4); /* Black w/ opacity */
    }
    .table-condensed{
      font-size: 15px;
    }
    .table td.fit, 
    .table th.fit {
      white-space: nowrap;
      width: 1%;
    }
    #newPass {
      width: max-content;
      margin: 5px;
      border-radius: 10px;
      height: max-content;
    }
    #passBack {
      background-color: lightseagreen;
      min-width: min-content;
      max-width: 160px;
      width: 75%;
      border-radius: 5px;
      position: absolute;
      left: 40%;
      top: -14%;
      animation-name: moveUp;
      animation-duration: 1s;
    }

    #passBack:hover {
      animation-name: moveDown;
      animation-duration: 1s;
      top: -1%;
    }

    @keyframes moveDown {
      from {top: -14%;}
      to {top: -1%;}
    }

    @keyframes moveUp {
      from {top: -1%;}
      to {top: -14%;}
    }

    #tab {
      position: absolute;
      background-color: lightseagreen;
      border-radius: 5px;
      top: 95%;
      left: 40%;
      width: 60px;
      height: 40px;
    }
</style>
<link rel="stylesheet" href="/loadingdot">
<title>My Passwords</title>
<meta name="viewport" content="width=device-width, initial-scale=1"> 
<script src="https://kit.fontawesome.com/d2dd9afdb0.js" crossorigin="anonymous"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js" crossorigin="anonymous"></script>
</head>

<body onload="display();">
    <div id="veil" class="veil"></div>
    <div class="jumbotron">
    <h1 class="text-center">My Passwords</h1>
    </div>
    <button type="button" data-toggle="modal" data-target="#newModal" class="btn btn-success"><i class="fas fa-plus-square"></i></button><br><br>
    <form action="/database/search">
      <input name="q" placeholder="Search..." required>
      <button type="submit" class="btn btn-info"><i class="fas fa-search"></i></button>
    </form>
    <div id="passBack">
    <div id="tab"></div>
    <div id="newPass">
    <p>Generate new password:</p>
    <label for="dPassLength">Length:</label>
    <input type="number" value="32" id="dPassLength">
    <label for="dAlphabet">Alphabet:</label>
    <input type="text" value="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789!@#$%^&*()-_=+[]';:/?.," id="dAlphabet">
    <button class="popup btn btn-primary" onclick="generatePassword();">Generate
      <span class="popuptext" id="passwordPopup">Copied to clipboard!</span>
    </button>
    </div>
    </div>
    <button onclick="bulkDelete()" class="btn btn-danger" id="bulkDel" disabled><i class="fas fa-trash"></i> <span class="badge badge-light" id="bulkAm">0</span></button><br>
    <button onclick="location = '/'" class="btn btn-light"><i class="fas fa-arrow-left"></i></button><br><br>
    <table class="table table-bordered table-condensed table-responsive" style="table-layout: auto;">
      <thead>
        <tr>
            <th scope="col" class="fit" style="width: 1%;"><input type="checkbox" onchange="checkAll(this)"></th>
            <th scope="col" class="fit">Code</th>
            <th scope="col" class="fit">Link</th>
            <th scope="col" class="fit">Username</th>
            <th scope="col" class="fit">Password</th>
            <th scope="col" class="fit">Buttons</th>
        </tr>
        </thead>
        <tbody id="table"></tbody>
      </table>
    <br><br>
    <button onclick="location = '/'" class="btn btn-light"><i class="fas fa-arrow-left"></i></button><br>
    <div id="typeModal" class="modal fade">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <p class="modal-title">What would you like to change?</p>
            <span class="close" data-dismiss="modal">&times;</span>
          </div>
          <div class="modal-body">
            <input type="radio" id="code" name="type" value="code">
            <label for="code">Code</label><br>
            <input type="radio" id="link" name="type" value="link">
            <label for="link">Link</label><br>
            <input type="radio" id="name" name="type" value="name">
            <label for="name">Name</label><br>
            <input type="radio" id="ipassword" name="type" value="ipassword">
            <label for="ipassword">Input Password</label><br>
            <input type="radio" id="rpassword" name="type" value="rpassword">
            <label for="rpassword">Random Password</label><br>
          </div>
          <div class="modal-footer">
            <button id="typeSubmit" class="btn btn-primary">Next</button>
          </div>
        </div>
      </div>
    </div>
      <div id="changeModal" class="modal fade">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <p>What do you want to update it to?</p>
              <span class="close" id="changeClose" data-dismiss="modal">&times;</span>
            </div>
            <div class="modal-body">
              <input type="text" id="change" name="change">
            </div>
            <div class="modal-footer">
              <button id="changeSubmit" class="btn btn-success">Submit</button>
            </div>
          </div>
        </div>
      </div>
      <div id="passModal" class="modal fade">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <p>Is this a good password?<br>If not, please select "Generate New".</p>
              <span class="close" id="passClose" data-dismiss="modal">&times;</span>
            </div>
            <div class="modal-body">
              <p id="newRPass"></p>
              <label for="passLength">Length:</label>
              <input type="number" id="passLength" value="32">
              <label for="alphabet">Alphabet:</label>
              <input type="text" id="alphabet" value="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789!@#$%^&*()-_=+[]';:/?.,">
              <button id="genNew" class="btn btn-info">Generate New</button><br>
            </div>
            <div class="modal-footer">
              <button id="passGood" class="btn btn-success text-center">Looks good!</button>
            </div>
          </div>
        </div>
      </div>
      <div id="newModal" class="modal fade">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
          <h1>New Password</h1>
          <span class="close inline" id="newClose" data-dismiss="modal">&times;</span>
          </div>
          <div class="modal-body">
          <form action="/database/create">
            <div class="form-group">
            <label for="code">Code</label>
            <input id="newCode" name="code" type="text" class="form-control" required>
            </div>
            <div class="form-group">
            <label for="link">Link</label>
            <input id="newLink" name="link" type="url" class="form-control" required>
            </div>
            <div class="form-group">
            <label for="name">Name</label>
            <input id="newName" name="name" type="text" class="form-control" required>
            </div>
            <div class="form-group">
            <label for="password">Password</label>
            <input id="newPassword" name="password" type="password" class="form-control" required>
            </div>
          </div>
          <div class="modal-footer">
            <div class="form-group">
            <input type="submit" value="Create" id="newSubmit" class="btn btn-success">
            </div>
          </div>
          </form>
        </div>
      </div>
      <div class="cssload-dots" id="load-dots">
        <div class="cssload-dot"></div>
        <div class="cssload-dot"></div>
        <div class="cssload-dot"></div>
        <div class="cssload-dot"></div>
        <div class="cssload-dot"></div>
      </div>
      
      <svg version="1.1" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <filter id="goo">
            <feGaussianBlur in="SourceGraphic" result="blur" stdDeviation="12" ></feGaussianBlur>
            <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0	0 1 0 0 0	0 0 1 0 0	0 0 0 18 -7" result="goo" ></feColorMatrix>
            <!--<feBlend in2="goo" in="SourceGraphic" result="mix" ></feBlend>-->
          </filter>
        </defs>
      </svg>
      <div id="snackbar">%PLACEHOLDER_ALERT%</div>
      <script>

        window.onkeydown = function (e) {
          if (e.code == "Escape") {
            $('.modal').modal('hide');
          }
        }

          function display() { 

            var created = new URLSearchParams(window.location.search).get('created')
        if (created) swal({
          title: "Entry created successfully!",
          icon: "success"
        })
        var deleted = new URLSearchParams(window.location.search).get('deleted')
        if (deleted) swal({
          title: "Entry deleted successfully!",
          icon: "success"
        })
        var error = new URLSearchParams(window.location.search).get('error')
        if (error) swal({
          title: "An error occured.",
          icon: "error"
        })
        var updated = new URLSearchParams(window.location.search).get('updated')
        if (updated) swal({
          title: "Entry updated successfully!",
          icon: "success"
        })
        var bulkdel = new URLSearchParams(window.location.search).get('bulkdel')
        if (bulkdel) swal({
          title: "Multiple entries deleted succesfully!",
          icon: "success"
        })
            
        // Displaying results timee
        var results = <%-JSON.stringify(db)%>
        if (results.length == 0) {
          alert("No passwords in your database. Please create a new password in the following dialog.")
          $('#newModal').modal('show')
        }
          var table = document.getElementById('table')
          function ajax(method, url, done) {
              var xhr = new XMLHttpRequest();
              xhr.open(method, url)
              xhr.onreadystatechange = function() {
                if (this.status == 200 && this.readyState == 4) {
                  done(null, xhr.responseText)
                }
              };
              xhr.onerror = function() {
                done(xhr.responseText)
              };
              xhr.send();
            };
          results.forEach(result => {
            var row = table.insertRow(-1);
              var cell0 = row.insertCell(0);
              var cell1 = row.insertCell(1);
              var cell2 = row.insertCell(2);
              var cell3 = row.insertCell(3);
              var cell4 = row.insertCell(4);
              var cell5 = row.insertCell(5);
  
              ajax('GET', '/database/decrypt?password=' + JSON.stringify(result.password), function(err, data) {
                if (err) throw err;
                cell4.innerHTML = "•••••••" + ` <button onclick="copy('`+ data + `')" class="btn btn-primary btn-sm" style="display: inline-block;"><i class="far fa-copy"></i></button>`
                cell5.innerHTML = `<div class='btn-group'><button onclick='deleteEntry("` + result.code + `")' class='btn btn-danger btn-sm'><i class="fas fa-trash"></i></button> <button onclick="edit('` + result.code + `')" data-toggle="modal" data-target="#typeModal" class='btn btn-info btn-sm'><i class="fas fa-edit"></i></button> <button onclick='copyopen("` + result.link + `", "`+ data + `")' class='btn btn-secondary btn-sm'><i class="fas fa-copy"></i></button></div>`
              })
              
              cell4.style.width = "100px"
              cell0.innerHTML = '<input type="checkbox" id="' + result.code + '" onchange="checkmarks(this)" scope="row">'
              cell1.innerHTML = result.code
              cell2.innerHTML = result.link + " <a href=" + result.link + " class='btn btn-primary btn-sm' target='_blank'><i class='fas fa-door-open'></i></a>"
              cell3.innerHTML = result.name + ` <button onclick='copy("` + result.name + `")' class='btn btn-primary btn-sm'><i class="far fa-copy"></i></button>`
          });
          document.getElementById('load-dots').style.display = "none";
          document.getElementById('veil').style.display = "none";
        }

        function copy(text) {
        const el = document.createElement('textarea');
        el.value = text;
        document.body.appendChild(el)
        el.select()
        document.execCommand('copy')
        document.body.removeChild(el);
        alert("Copied to clipboard!")
      }

      function copynoalert(text) {
        const el = document.createElement('textarea');
        el.value = text;
        document.body.appendChild(el)
        el.select()
        document.execCommand('copy')
        document.body.removeChild(el);
      }

      function copyopen(link, password) {
        copynoalert(password)
        window.open(link)
      }

      function deleteEntry(code) {
        var yn = confirm("Are you sure you want to delete " + code + "? THIS CANNOT BE UNDONE!")
        if (!yn) {
          return snackbar("Cancelled.")
        }
        document.getElementById('load-dots').style.display = "block";
        document.getElementById('veil').style.display = "block";
        function ajax(method, url, done) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, url)
            xhr.onreadystatechange = function() {
              if (this.status == 202 && this.readyState == 4) {
                done(null, xhr.responseText)
              }
            };
            xhr.onerror = function() {
              done(xhr.response)
            };
            xhr.send();
          };

          ajax('GET', '/database/delete?code=' + code, function(err, data) {
            if (err) {
              throw err;
              location = '/database?error=true'
            }
            if (data == "Success") {
              location = '/database?deleted=true'
            } else {
              location = '/database?error=true'
            }
          })
        document.getElementById('load-dots').style.display = "none";
        document.getElementById('veil').style.display = "none";
      }

      function edit(code) {
          var typeModal = document.getElementById('typeModal')
          var changeModal = document.getElementById('changeModal')
          var passModal = document.getElementById('passModal')
          var typeSpan = document.getElementById('typeClose')
          var changeClose = document.getElementById('changeClose')
          var passClose = document.getElementById('passClose')
          var typeSubmit = document.getElementById('typeSubmit')
          var changeSubmit = document.getElementById('changeSubmit')
          var passSubmit = document.getElementById('passGood')
          var genNew = document.getElementById('genNew')

          function clearType() {
            document.getElementById('code').checked = false;
            document.getElementById('name').checked = false;
            document.getElementById('ipassword').checked = false;
            document.getElementById('rpassword').checked = false;
            document.getElementById('link').checked = false;
          }

          function clearSubmit() {
            document.getElementById('change').value = "";
          }

          function clearPass() {
            document.getElementById('newRPass').innerHTML = "";
          }

          var type;

          typeSubmit.onclick = function() {
            $('#typeModal').modal('hide')

            if (document.getElementById('code').checked) {
              type = "code";
            } else if (document.getElementById('name').checked) {
              type = "name";
            } else if (document.getElementById('ipassword').checked) {
              type = "ipassword";
              document.getElementById('change').setAttribute('type', 'password')
            } else if (document.getElementById('link').checked) {
              type = "link";
            } else if (document.getElementById('rpassword').checked) {
              type = "rpassword";
            }

            if (type !== "rpassword") {
              $('#changeModal').modal('show')
            } else {
              var length = document.getElementById('passLength').value,
                  charset = document.getElementById('alphabet').value,
                  retVal = "",
                  n = charset.length;
              for (let i = 0; i < length; ++i) {
                retVal += charset.charAt(Math.floor(Math.random() * n))
              }
              document.getElementById('newRPass').innerHTML = retVal;
              $('#passModal').modal('show')
            }
          }

          genNew.onclick = function() {
            var length = document.getElementById('passLength').value,
                charset = document.getElementById('alphabet').value,
                retVal = "",
                n = charset.length;
            for (let i = 0; i < length; ++i) {
              retVal += charset.charAt(Math.floor(Math.random() * n))
            }
            document.getElementById('newRPass').innerHTML = retVal;
          }

          changeSubmit.onclick = function () {
            if (type == "ipassword") {
            type = "password";
          }
            var yn = confirm(`Are you sure you want to change the ${type} of ${code} to ${document.getElementById('change').value}?`)
            if (!yn) {
              clearSubmit()
              clearType()
              swal({
                title: "Cancelled.",
                icon: "success"
              })
              return $('#changeModal').modal('hide')
            }
            $('#changeModal').modal('hide')
            document.getElementById('load-dots').style.display = "block";
            document.getElementById('veil').style.display = "block";

            function ajax(method, url, done) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, url)
            xhr.onreadystatechange = function() {
              if (this.status == 200 && this.readyState == 4) {
                done(null, xhr.responseText)
              }
            };
            xhr.onerror = function() {
              done(xhr.response)
            };
            xhr.send();
          };

          ajax('GET', '/database/update?toChange=' + type + '&_code=' + code + '&update=' + document.getElementById('change').value, function(err, data) {
            if (err) throw err;
            if (data == "Success") {
              document.getElementById("load-dots").style.display = "none";
              document.getElementById('veil').style.display = "none";
              location = '/database?updated=true'
              
            } else {
              document.getElementById("load-dots").style.display = "none";
              document.getElementById('veil').style.display = "none";
              snackbar("There is no error and no success. It should not be possible to recieve this error.")
              location = '/database?error=true'
            }
          })
          }

          passSubmit.onclick = function() {
            var yn = confirm(`Are you sure you want to change the password of ${code} to ${document.getElementById('newRPass').innerHTML}?`)
            if (!yn) {
              clearSubmit()
              clearType()
              clearPass()
              swal({
                title: "Cancelled.",
                icon: "success"
              })
              return $('#passModal').modal('hide')
            }
            $('#passModal').modal('hide')
            document.getElementById('load-dots').style.display = "block";
            document.getElementById('veil').style.display = "block";

            function ajax(method, url, done) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, url)
            xhr.onreadystatechange = function() {
              if (this.status == 200 && this.readyState == 4) {
                done(null, xhr.responseText)
              }
            };
            xhr.onerror = function() {
              done(xhr.response)
            };
            xhr.send();
          };
          ajax('GET', '/database/update?toChange=password&_code=' + code + '&update=' + document.getElementById('newRPass').innerHTML, function(err, data) {
            if (err) throw err;
            if (data == "Success") {
              document.getElementById("load-dots").style.display = "none";
              document.getElementById('veil').style.display = "none";
              location = '/database?updated=true'
              
            } else {
              document.getElementById("load-dots").style.display = "none";
              document.getElementById('veil').style.display = "none";
              snackbar("There is no error and no success. It should not be possible to recieve this error.")
              location = '/database?error=true'
            }
          })
          }
      }

      function newPassword() {
        var newModal = document.getElementById('newModal')
        var newClose = document.getElementById('newClose')
        var newSubmit = document.getElementById('newSubmit')

        newModal.style.display = "block";

        function clear() {
          document.getElementById('newCode').value = "";
          document.getElementById('newLink').value = "";
          document.getElementById('newName').value = "";
          document.getElementById('newPassword').value = "";
        }

        newClose.onclick = function() {
          clear()
          newModal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == newModal) {
              clear()
              newModal.style.display = "none";
            }
          }
      }

      function generatePassword() {
        var length = document.getElementById('passLength').value,
                charset = document.getElementById('alphabet').value,
                retVal = "",
                n = charset.length;
            for (let i = 0; i < length; ++i) {
              retVal += charset.charAt(Math.floor(Math.random() * n))
            }
          copynoalert(retVal)
          var popup = document.getElementById('passwordPopup')
          popup.classList.toggle('show');
      }
      var marks = []
      function checkmarks(ele) {
        if (!marks.includes(ele.id) && ele.checked == true) {
          marks.push(ele.id)
        } else if (marks.includes(ele.id) && ele.checked == false) {
          for (let i = 0; i < marks.length; i++) {
            if (marks[i] === ele.id) {
              marks.splice(i, 1)
            }
          }
        }
        if (marks.length >= 1) {
          document.getElementById('bulkDel').disabled = false;
          document.getElementById('bulkAm').innerHTML = marks.length;
        } else {
          document.getElementById('bulkDel').disabled = true;
          document.getElementById('bulkAm').innerHTML = 0;
        }
      }
      
      function checkAll(ele) {
     var checkboxes = document.getElementsByTagName('input');
     if (ele.checked) {
         for (var i = 0; i < checkboxes.length; i++) {
             if (checkboxes[i].type == 'checkbox') {
                 checkboxes[i].checked = true;
                 if (checkboxes[i].id !== "") {
                   marks.push(checkboxes[i].id)
                 }
             }
         }
     } else {
         for (var i = 0; i < checkboxes.length; i++) {
             if (checkboxes[i].type == 'checkbox') {
                 checkboxes[i].checked = false;
                 if (checkboxes[i].id !== "") {
                   marks.pop()
                 }
             }
         }
     }
     if (marks.length >= 1) {
          document.getElementById('bulkDel').disabled = false;
          document.getElementById('bulkAm').innerHTML = marks.length;
        } else {
          document.getElementById('bulkDel').disabled = true;
          document.getElementById('bulkAm').innerHTML = 0;
        }
 }

 function bulkDelete() {
  function ajax(method, url, done) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, url)
            xhr.onreadystatechange = function() {
              if (this.status == 200 && this.readyState == 4) {
                done(null, xhr.responseText)
              }
            };
            xhr.onerror = function() {
              done(xhr.response)
            };
            xhr.send();
          };
   swal(`Are you sure you want to delete ${marks.length} items?`, {
     buttons: true,
     icon: "warning",
     dangerMode: true
   })
   .then((value) => {
     if (value) {
      document.getElementById('load-dots').style.display = "block";
      document.getElementById('veil').style.display = "block";
      ajax('GET', '/bulkdel?del=' + marks, function(err, res) {
        if (res == "Success" && !err) {
          location = '/database?bulkdel=true'
        } else if (err) {
          throw err;
          location = '/database?error=true'
        } else {
          location = '/database?error=true'
        }
      })
     } else {
       swal("Cancelled.")
     }
   })
 }
      </script>
</body>
</html>